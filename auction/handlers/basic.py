from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from auction import config
import logging

router = Router()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–∞
class FeedbackForm(StatesGroup):
    waiting_for_feedback = State()

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≥–¥–µ-—Ç–æ —Ç–µ–±—è –≤–∏–¥–µ–ª! \n"
    "–ê —Ç–æ—á–Ω–æ! –¢—ã –ø—Ä–æ–±–µ–≥–∞–ª –º–∏–º–æ –º–µ–Ω—è –Ω–∞ –ø–ª–∞–∑–µ! \n"
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "üìå –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
        "/start ‚Äî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help ‚Äî –°–ø—Ä–∞–≤–∫–∞\n"
        "/info ‚Äî –û –±–æ—Ç–µ\n"
        "/feedback ‚Äî –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
    )

# –ö–æ–º–∞–Ω–¥–∞ /info
@router.message(Command("info"))
async def cmd_info(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –¢–µ–±–µ —Å—Ç–∞–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —á–µ–º —è –∑–∞–Ω–∏–º–∞—é—Å—å? \n"
        "–Ø –ø—Ä–æ—Å—Ç–æ —É–≤–µ–¥–æ–º–ª—è—é –ë–∞–º–ø–∫–∏–Ω–æ–≤ –æ–± –∞—É–∫—Ü–∏–æ–Ω–∞—Ö \n"
        "–î–µ–ª–∞—é —è —ç—Ç–æ —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ https://t.me/URGSFL"
    )

# –ö–æ–º–∞–Ω–¥–∞ /feedback
@router.message(Command("feedback"))
async def cmd_feedback(message: types.Message, state: FSMContext):
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    await state.set_state(FeedbackForm.waiting_for_feedback)
    await message.answer("‚úâÔ∏è –£ –≤–∞—Å –µ—Å—Ç—å —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å? \n"
    "–ë—É–¥—É —Ä–∞–¥ –ø–µ—Ä–µ–¥–∞—Ç—å –ì–ª–∞–≤–Ω–æ–º—É –≥–æ–±–ª–∏–Ω—É –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è."
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞
@router.message(FeedbackForm.waiting_for_feedback)
async def process_feedback(message: types.Message, state: FSMContext):
    feedback_text = message.text
    logging.info(
        feedback_text,
        extra={
            'username': message.from_user.username or "–ë–µ–∑ username",
            'user_id': message.from_user.id
        }
    )
    await message.answer("–Ø –ø–µ—Ä–µ–¥–∞–º –≤—Å–µ —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–æ.")
    await state.reset_state()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
