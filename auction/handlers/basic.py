from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from auction import config
import logging

router = Router()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–∞
class FeedbackForm(StatesGroup):
    waiting_for_feedback = State()

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –Ω–∞—á–∞–ª–µ –∞—É–∫—Ü–∏–æ–Ω–æ–≤.")

# –ö–æ–º–∞–Ω–¥–∞ /help
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "üìå –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
        "/start ‚Äî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help ‚Äî –°–ø—Ä–∞–≤–∫–∞\n"
        "/info ‚Äî –û –±–æ—Ç–µ\n"
        "/feedback ‚Äî –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
    )

# –ö–æ–º–∞–Ω–¥–∞ /info
@router.message(Command("info"))
async def cmd_info(message: types.Message):
    await message.answer(
        "‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.\n"
        "–í –±—É–¥—É—â–µ–º –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á."
    )

# –ö–æ–º–∞–Ω–¥–∞ /feedback
@router.message(Command("feedback"))
async def cmd_feedback(message: types.Message, state: FSMContext):
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    await state.set_state(FeedbackForm.waiting_for_feedback)
    await message.answer("‚úâÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π –æ—Ç–∑—ã–≤:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞
@router.message(FeedbackForm.waiting_for_feedback)
async def process_feedback(message: types.Message, state: FSMContext):
    feedback_text = message.text
    logging.info(
        feedback_text,
        extra={
            'username': message.from_user.username or "–ë–µ–∑ username",
            'user_id': message.from_user.id
        }
    )
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –¢–≤–æ–π –æ—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
    await state.reset_state()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
